generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["public"]
}

model users {
  id            Int          @id @default(autoincrement()) @db.SmallInt
  firstName     String
  middleName    String?
  lastName      String?
  age           Int?         @db.SmallInt
  created_at    DateTime     @default(now()) @db.Timestamptz(6)
  suffixName    String?
  isActive      Boolean      @default(true)
  userAccountId Int?
  roleId        Int?
  Role          Role?        @relation(fields: [roleId], references: [id])
  userAccount   userAccount? @relation(fields: [userAccountId], references: [id])

  @@schema("public")
}

model userAccount {
  id         Int      @id @default(autoincrement()) @db.SmallInt
  username   String
  email      String
  password   String
  isActive   Boolean  @default(true)
  created_at DateTime @default(now()) @db.Timestamptz(6)
  userRoleId Int?
  accountId  Int
  userRole   Role?    @relation(fields: [userRoleId], references: [id])
  users      users[]

  @@schema("public")
}

model Address {
  id           Int     @id @default(autoincrement())
  region       String?
  province     String?
  municipality String?
  barangay     String?
  floor_unit   String?
  zipcode      Int?

  @@schema("public")
}

model Role {
  id          Int              @id @default(autoincrement())
  name        String           @unique
  permissions PagePermission[]
  userAccount userAccount[]
  users       users[]

  @@schema("public")
}

model Page {
  id          Int              @id @default(autoincrement())
  name        String           @unique
  permissions PagePermission[]

  @@schema("public")
}

model PagePermission {
  id       Int     @id @default(autoincrement())
  roleId   Int
  pageId   Int
  canRead  Boolean @default(false)
  canWrite Boolean @default(false)
  page     Page    @relation(fields: [pageId], references: [id])
  role     Role    @relation(fields: [roleId], references: [id])

  @@unique([roleId, pageId])
  @@schema("public")
}

model AuditLogs {
  id          Int       @id @default(autoincrement())
  action      String?
  module      String?
  logTimeDate DateTime?
  accountId   Int?

  @@schema("public")
}
